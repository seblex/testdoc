.PHONY: build build-cli test test-race test-short test-cover lint fmt vet tidy clean install demo examples docs docker-check docker-build docker-run help

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BINARY_NAME=testdoc
CLI_PATH=./cmd/testdoc
COVERAGE_FILE=coverage.out
DOCKER_IMAGE=seblex5/testdoc

# Docker –∫–æ–º–∞–Ω–¥–∞ (—Ç–æ–ª—å–∫–æ docker, –±–µ–∑ sudo)
DOCKER_CMD := docker

# –°–±–æ—Ä–∫–∞ CLI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
build:
	@echo "üî® –°–±–æ—Ä–∫–∞ CLI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	@go build -o bin/$(BINARY_NAME) $(CLI_PATH)
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: bin/$(BINARY_NAME)"

# –°–±–æ—Ä–∫–∞ —Å –≤–µ—Ä—Å–∏–µ–π
build-cli:
	@echo "üî® –°–±–æ—Ä–∫–∞ CLI —Å –≤–µ—Ä—Å–∏–µ–π..."
	@mkdir -p bin
	@go build -ldflags "-X main.version=$(shell git describe --tags --always --dirty)" -o bin/$(BINARY_NAME) $(CLI_PATH)
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: bin/$(BINARY_NAME)"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ
install:
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $(BINARY_NAME)..."
	@go install $(CLI_PATH)
	@echo "‚úÖ $(BINARY_NAME) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ $$(go env GOPATH)/bin/"

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤..."
	@go test ./pkg/... ./ 

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å race detector
test-race:
	@echo "üèÉ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å race detector..."
	@go test -race ./...

# –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –±—ã—Å—Ç—Ä—ã—Ö —Ç–µ—Å—Ç–æ–≤
test-short:
	@echo "‚ö° –ó–∞–ø—É—Å–∫ –±—ã—Å—Ç—Ä—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
	@go test -short ./...

# –¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
test-cover:
	@echo "üìä –¢–µ—Å—Ç—ã —Å –∞–Ω–∞–ª–∏–∑–æ–º –ø–æ–∫—Ä—ã—Ç–∏—è..."
	@go test -coverprofile=$(COVERAGE_FILE) -covermode=atomic ./...
	@go tool cover -func=$(COVERAGE_FILE)
	@echo "üìà HTML –æ—Ç—á–µ—Ç: make cover-html"

# HTML –æ—Ç—á–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏—è
cover-html: test-cover
	@go tool cover -html=$(COVERAGE_FILE) -o coverage.html
	@echo "üìä –û—Ç—á–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏—è: coverage.html"

# –õ–∏–Ω—Ç–∏–Ω–≥
lint:
	@echo "üîç –ó–∞–ø—É—Å–∫ –ª–∏–Ω—Ç–µ—Ä–∞..."
	@command -v golangci-lint >/dev/null 2>&1 || { echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ golangci-lint: https://golangci-lint.run/usage/install/"; exit 1; }
	@golangci-lint run

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
fmt:
	@echo "üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	@go fmt ./...

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
vet:
	@echo "üîç –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑..."
	@go vet ./...

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
tidy:
	@echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ go.mod..."
	@go mod tidy
	@go mod verify

# –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
check: fmt vet lint test-race
	@echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"

# –û—á–∏—Å—Ç–∫–∞
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤..."
	@rm -rf bin/
	@rm -f $(COVERAGE_FILE) coverage.html
	@rm -f *-documentation.md
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã
demo: build
	@echo "üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è TestDoc"
	@echo ""
	@echo "1. –ê–Ω–∞–ª–∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ç–µ—Å—Ç–æ–≤:"
	@./bin/$(BINARY_NAME) examples/_examples
	@echo ""
	@echo "2. –ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:"
	@head -20 test-documentation.md || echo "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
	@echo ""
	@echo "üìñ –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: test-documentation.md"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–º–µ—Ä–æ–≤
docs: build
	@echo "üìö –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
	@./bin/$(BINARY_NAME) examples/_examples -output docs/examples.md
	@echo "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞: docs/examples.md"

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤
examples: build
	@echo "üîß –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è..."
	@cd cmd/examples/basic && go run main.go
	@echo ""
	@cd cmd/examples/advanced && go run main.go
	@echo "‚úÖ –ü—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"

# Docker —Å–±–æ—Ä–∫–∞
docker-build:
	@echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
	@echo "‚ÑπÔ∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è: $(DOCKER_CMD)"
	@if ! $(DOCKER_CMD) build -t $(DOCKER_IMAGE):latest . 2>/dev/null; then \
		echo ""; \
		echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ Docker –æ–±—Ä–∞–∑–∞!"; \
		echo ""; \
		echo "üí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:"; \
		echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Docker:"; \
		echo "      sudo usermod -aG docker $$USER && newgrp docker"; \
		echo ""; \
		echo "   2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–π –æ–±—Ä–∞–∑:"; \
		echo "      docker pull seblex5/testdoc:latest"; \
		echo ""; \
		echo "   3. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω—É—é —Å–±–æ—Ä–∫—É:"; \
		echo "      make build && ./bin/$(BINARY_NAME) examples/_examples"; \
		echo ""; \
		exit 1; \
	fi
	@echo "‚úÖ Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω: $(DOCKER_IMAGE):latest"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
docker-check:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
	@if ! command -v docker >/dev/null 2>&1; then \
		echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"; \
		echo "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker: https://docs.docker.com/get-docker/"; \
		exit 1; \
	fi
	@if ! docker version >/dev/null 2>&1; then \
		echo "‚ùå Docker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!"; \
		echo ""; \
		echo "üìã –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"; \
		echo "   sudo usermod -aG docker $$USER"; \
		echo "   newgrp docker"; \
		echo ""; \
		echo "   –ò–ª–∏ –ø–µ—Ä–µ–ª–æ–≥–∏–Ω—å—Ç–µ—Å—å –≤ —Å–∏—Å—Ç–µ–º—É."; \
		echo ""; \
		echo "‚ö†Ô∏è  –ü–æ–¥—Ä–æ–±–Ω–µ–µ: https://docs.docker.com/engine/install/linux-postinstall/"; \
		exit 1; \
	fi
	@if ! docker build --help >/dev/null 2>&1; then \
		echo "‚ùå –ö–æ–º–∞–Ω–¥–∞ 'docker build' –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞!"; \
		echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É Docker –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞."; \
		exit 1; \
	fi
	@echo "‚úÖ Docker –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"

# Docker –∑–∞–ø—É—Å–∫
docker-run: docker-check docker-build
	@echo "üê≥ –ó–∞–ø—É—Å–∫ –≤ Docker..."
	@$(DOCKER_CMD) run --rm -v $$(pwd):/workspace $(DOCKER_IMAGE):latest /workspace/examples/_examples

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–µ–ª–∏–∑—É
release-prep: clean fmt vet lint test-cover
	@echo "üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–µ–ª–∏–∑—É..."
	@git status --porcelain | grep -q . && echo "‚ùå –ï—Å—Ç—å –Ω–µcommitted –∏–∑–º–µ–Ω–µ–Ω–∏—è" && exit 1 || echo "‚úÖ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —á–∏—Å—Ç–∞—è"
	@echo "‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Ä–µ–ª–∏–∑—É"

# CI –ø—Ä–æ–≤–µ—Ä–∫–∏
ci: check test-cover
	@echo "ü§ñ CI –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã"

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev-setup:
	@echo "üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	@go mod download
	@go mod verify
	@command -v golangci-lint >/dev/null 2>&1 || curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin
	@echo "‚úÖ –°—Ä–µ–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"

# –ë–µ–Ω—á–º–∞—Ä–∫–∏
bench:
	@echo "‚ö° –ó–∞–ø—É—Å–∫ –±–µ–Ω—á–º–∞—Ä–∫–æ–≤..."
	@go test -bench=. -benchmem ./...

# –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
profile:
	@echo "üìä –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ..."
	@go test -cpuprofile=cpu.prof -memprofile=mem.prof -bench=. ./pkg/parser
	@echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: go tool pprof cpu.prof –∏–ª–∏ go tool pprof mem.prof"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–æ–∫–æ–≤ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)
generate:
	@echo "üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞..."
	@go generate ./...

# –°–ø—Ä–∞–≤–∫–∞
help:
	@echo "TestDoc - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è Go —Ç–µ—Å—Ç–æ–≤"
	@echo ""
	@echo "üèóÔ∏è  –°–±–æ—Ä–∫–∞:"
	@echo "  build           - –°–æ–±—Ä–∞—Ç—å CLI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
	@echo "  build-cli       - –°–æ–±—Ä–∞—Ç—å —Å –≤–µ—Ä—Å–∏–µ–π –∏–∑ git"
	@echo "  install         - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ"
	@echo ""
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
	@echo "  test            - –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"
	@echo "  test-race       - –¢–µ—Å—Ç—ã —Å race detector"
	@echo "  test-short      - –¢–æ–ª—å–∫–æ –±—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã"
	@echo "  test-cover      - –¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º"
	@echo "  cover-html      - HTML –æ—Ç—á–µ—Ç –ø–æ–∫—Ä—ã—Ç–∏—è"
	@echo "  bench           - –ë–µ–Ω—á–º–∞—Ä–∫–∏"
	@echo ""
	@echo "üîç –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞:"
	@echo "  lint            - –õ–∏–Ω—Ç–∏–Ω–≥"
	@echo "  fmt             - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
	@echo "  vet             - –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑"
	@echo "  check           - –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
	@echo ""
	@echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
	@echo "  demo            - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã"
	@echo "  docs            - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"
	@echo "  examples        - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤"
	@echo ""
	@echo "üê≥ Docker:"
	@echo "  docker-check    - –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Docker"
	@echo "  docker-build    - –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞"
	@echo "  docker-run      - –ó–∞–ø—É—Å–∫ –≤ Docker"
	@echo ""
	@echo "üõ†Ô∏è  –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:"
	@echo "  dev-setup       - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–µ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  tidy            - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
	@echo "  generate        - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞"
	@echo "  clean           - –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤"
	@echo ""
	@echo "üöÄ –†–µ–ª–∏–∑:"
	@echo "  release-prep    - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–µ–ª–∏–∑—É"
	@echo "  ci              - CI –ø—Ä–æ–≤–µ—Ä–∫–∏"
	@echo ""
	@echo "–ü—Ä–∏–º–µ—Ä—ã:"
	@echo "  make demo                    # –ë—ã—Å—Ç—Ä–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è"
	@echo "  make check                   # –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞"
	@echo "  make test-cover             # –¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º"
	@echo "  make docker-run             # –ó–∞–ø—É—Å–∫ –≤ Docker"
