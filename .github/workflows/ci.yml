name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.x, 1.22.x, 1.23.x]

    steps:
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Check out code
      uses: actions/checkout@v4

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run vet
      run: go vet ./...

    - name: Run tests
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Build CLI
      run: go build -o bin/testdoc ./cmd/testdoc

    - name: Test CLI
      run: |
        ./bin/testdoc -version
        ./bin/testdoc -help

    - name: Upload CLI artifact
      uses: actions/upload-artifact@v3
      with:
        name: testdoc-cli
        path: bin/testdoc

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Download CLI artifact
      uses: actions/download-artifact@v3
      with:
        name: testdoc-cli
        path: bin/

    - name: Make CLI executable
      run: chmod +x bin/testdoc

    - name: Run integration test
      run: |
        # Генерируем документацию для примеров
        ./bin/testdoc examples/_examples -output integration-test-docs.md
        
        # Проверяем, что файл создан и содержит ожидаемый контент
        [ -f integration-test-docs.md ] || exit 1
        grep -q "# Test Documentation" integration-test-docs.md || exit 1
        grep -q "TestValidateEmail" integration-test-docs.md || exit 1
        
        echo "✅ Integration test passed"

    - name: Upload integration test results
      uses: actions/upload-artifact@v3
      with:
        name: integration-test-docs
        path: integration-test-docs.md

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Run Gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: ./...
